"""
Django settings for ems project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path
from rest_framework import permissions

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['']

# CORS

CORS_ALLOWED_ORIGINS = [
    "",
]

CORS_ALLOW_HEADERS = ['content-disposition', 'accept-encoding',
                      'content-type', 'accept', 'origin', 'Authorization',
                      'access-control-allow-methods', 'Student']

CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'university',
    'users',
    'study',
    'certificate',
    'ads',
    'external_app_configs.AuditLogConfig',
    'rest_framework',
    'silk',
    'django_filters',
    'external_app_configs.KnoxConfig',
    'djoser',
    'corsheaders',
    'authaudit',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'middlewares.AuthAuditMiddleware',
    'middlewares.AuditlogMiddleware',
    'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'ems.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ems.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': '',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# REST FRAMEWORK
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'knox.auth.TokenAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
}


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru-Ru'

TIME_ZONE = 'Asia/Yekaterinburg'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# AUTH USER

AUTH_USER_MODEL = 'users.User'


# Media files

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


#  KNOX AUTH

REST_KNOX = {
    'TOKEN_TTL': timedelta(days=10),
    'TOKEN_LIMIT_PER_USER': 2,
    'AUTO_REFRESH': True,
    'MIN_REFRESH_INTERVAL': 60 * 60 * 24 * 20
}

# DJOSER

DJOSER = {
    'PASSWORD_RESET_SHOW_EMAIL_NOT_FOUND': True,
    'USERNAME_RESET_SHOW_EMAIL_NOT_FOUND': True,
    "PASSWORD_RESET_CONFIRM_RETYPE": True,
    "SET_PASSWORD_RETYPE": True,
    'EMAIL': {
        'password_reset': 'core.email.PasswordResetEmail',
        'username_reset': 'core.email.UsernameResetEmail',
    },
    'PASSWORD_RESET_CONFIRM_URL': 'password/reset/{uid}/{token}',
    'USERNAME_RESET_CONFIRM_URL': 'username/reset/{uid}/{token}',
    'PERMISSIONS':
        {
            "activation": (permissions.IsAdminUser,),
            "user_create": (permissions.IsAdminUser,),
            "user_delete": (permissions.IsAdminUser,),
            "user": (permissions.IsAdminUser,),
            "user_list": (permissions.IsAdminUser,),
            "token_create": (permissions.IsAdminUser,),
            "token_destroy": (permissions.IsAdminUser,),
    }
}

# Site

DOMAIN = ''
SITE_NAME = 'EMS'

# SMTP

EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True

EMAIL_HOST_USER = '*'
EMAIL_HOST_PASSWORD = '*'
EMAIL_PORT = 465
DEFAULT_FROM_EMAIL = '*'

# Django

PASSWORD_RESET_TIMEOUT = 60 * 3

# Django Audit Log

AUDITLOG_INCLUDE_TRACKING_MODELS = (
    {
        "model": "study.Course",
        "m2m_fields": ["owners"],
        "serialize_data": True,
    },
    {
        "model": "study.ControlMeasure",
        "serialize_data": True,
    },
    {
        "model": "study.StudyPlan",
        "serialize_data": True,
    },
    {
        "model": "study.StudyPlanCourses",
        "serialize_data": True,
    },
    {
        "model": "study.StudyGroup",
        "serialize_data": True,
    },
    {
        "model": "study.Attendance",
        "serialize_data": True,
    },
    {
        "model": "study.ControlMeasureScore",
        "serialize_data": True,
    },
    {
        "model": "study.CourseScore",
        "serialize_data": True,
    },
    {
        "model": "study.CourseTeacherStudyGroup",
        "serialize_data": True,
    },
    {
        "model": "users.User",
        "exclude_fields": ["last_login"],
        "serialize_data": True,
    },
    {
        "model": "users.UserInfo",
        "mask_fields": ["passport_series_and_number", "date_of_issue_of_the_passport",
                        "the_authority_that_issued_the_passport", "the_authority_that_issued_the_passport",
                        "place_of_registration", "place_of_living", "inn", "snils"],
        "serialize_data": True,
    },
    {
        "model": "users.Student",
        "serialize_data": True,
    },
    {
        "model": "users.Teacher",
        "m2m_fields": ["cathedra", "courses"],
        "serialize_data": True,
    },
    {
        "model": "users.PersonRole",
        "serialize_data": True,
    },
    {
        "model": "users.Person",
        "m2m_fields": ["roles"],
        "serialize_data": True,
    },
)
