# Generated by Django 4.2.6 on 2023-11-29 13:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_contacttype_personrole_teacher_student_person_and_more'),
        ('university', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=150, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('subcourse_number', models.CharField(blank=True, max_length=150)),
                ('description', models.TextField(blank=True)),
                ('classroom_worktime', models.PositiveSmallIntegerField()),
                ('independent_worktime', models.PositiveSmallIntegerField()),
                ('type_of_course', models.CharField(choices=[('STUDY_PRAC', 'Практика'), ('DISCIPLINE', 'Дисциплина'), ('STUDY_PRAC', 'Учебная практика'), ('PROD_PRAC', 'Производственная практика'), ('COURSE', 'Курсовая работа'), ('GROUP', 'Групповая работа'), ('NIRS', 'Научно-исследовательская работа'), ('GOS_EX', 'Государственный экзамен'), ('DIPLOM', 'Квалификационная работа')], max_length=10)),
                ('type_of_mark', models.CharField(choices=[('ex', 'Экзамен'), ('za', 'Зачет')], max_length=2)),
                ('count_of_lectures_pairs', models.PositiveSmallIntegerField()),
                ('count_of_practies_pairs', models.PositiveSmallIntegerField()),
                ('count_of_laboratory_pairs', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('owners', models.ManyToManyField(related_name='course_teacher', to='users.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code', models.CharField(max_length=150, unique=True)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=150, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='studyplan_speciality', to='university.speciality')),
            ],
        ),
        migrations.CreateModel(
            name='Trimester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trimester', models.CharField(choices=[('1', 'Осенний'), ('2', 'Весенний'), ('3', 'Летний')], max_length=1)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
            ],
            options={
                'unique_together': {('date_start', 'date_end')},
            },
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('type_of_pair', models.CharField(choices=[('LE', 'Лекция'), ('PR', 'Практика'), ('LA', 'Лабораторная работа')], max_length=2)),
                ('index_pair', models.PositiveSmallIntegerField()),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_upd', models.DateTimeField(auto_now=True)),
                ('is_attendance', models.BooleanField(blank=True, default=None)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timetable_classroom', to='university.classroom')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timetable_course', to='study.course')),
                ('groups', models.ManyToManyField(related_name='timetable_group', to='study.studygroup')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timetable_teacher', to='users.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='StudyPlanCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trimester', models.PositiveSmallIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='studyplancourses_course', to='study.course')),
                ('study_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='studyplancourses_studyplan', to='study.studyplan')),
            ],
            options={
                'unique_together': {('trimester', 'course', 'study_plan')},
            },
        ),
        migrations.AddField(
            model_name='studygroup',
            name='study_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='studygroup_studyplan', to='study.studyplan'),
        ),
        migrations.CreateModel(
            name='ControlMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('max_score', models.FloatField()),
                ('min_score', models.FloatField()),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_upd', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveSmallIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='coursecontrolmeasure_course', to='study.course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(choices=[('5', '5'), ('4', '4'), ('3', '3'), ('2', '2'), ('OK', 'Зачет'), ('FA', 'Незачет'), ('NO', 'Не выставлено')], max_length=2)),
                ('date_upd', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='coursescore_course', to='study.studyplancourses')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='coursescore_student', to='users.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='coursescore_teacher', to='users.teacher')),
            ],
            options={
                'unique_together': {('course', 'student')},
            },
        ),
        migrations.CreateModel(
            name='ControlMeasureScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(blank=True, null=True)),
                ('date_upd', models.DateTimeField(auto_now=True)),
                ('control_measure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controlmeasurescore_controlmeasure', to='study.controlmeasure')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controlmeasurescore_student', to='users.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controlmeasurescore_teacher', to='users.teacher')),
            ],
            options={
                'unique_together': {('student', 'control_measure')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(blank=True, null=True)),
                ('date_upd', models.DateTimeField(auto_now=True)),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_pair', to='study.timetable')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_student', to='users.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_teacher', to='users.teacher')),
            ],
            options={
                'unique_together': {('student', 'pair')},
            },
        ),
    ]
